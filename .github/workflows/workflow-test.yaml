name: terraform-worfklow

on:
  push:
    branches:
    - main
    - staging
    - develop
    paths:
    - '**'

jobs:
  init:
    name: Initialization
    runs-on: ubuntu-latest
    outputs:
      sha7: ${{ steps.param.outputs.sha7 }}
      threads: ${{ steps.param.outputs.threads }}
      work_depth: ${{ steps.param.outputs.work_depth }}
    steps:
      - name: Define settings
        id: settings
        env:
          GITHUB_SHA: ${{ github.sha }}
          GITHUB_REF: ${{ github.ref }}
        run: |
          echo GITHUB_SHA=$GITHUB_SHA
          GITHUB_SHORTSHA=${GITHUB_SHA:0:7}
          echo GITHUB_SHORTSHA=$GITHUB_SHORTSHA

          echo GITHUB_REF=$GITHUB_REF
          GITHUB_BRANCH=${GITHUB_REF##*/}
          echo GITHUB_BRANCH=$GITHUB_BRANCH

          echo "::set-output name=sha7::$GITHUB_SHORTSHA"
          if [ "$GITHUB_BRANCH" == "main" ]
          then
              WORK_DEPTH=3
          elif [ "$GITHUB_BRANCH" == "staging" ]
          then
              WORK_DEPTH=2
          elif [ "$GITHUB_BRANCH" == "develop" ]
          then
              WORK_DEPTH=1
          else
              echo "[-] Error unaccepted branch name"
              exit 1
          fi
          echo "::set-output name=work_depth::${WORK_DEPTH}"

      - name: Checkout
        id: checkout
        uses: actions/checkout@v2
        with:
          path: sources/
          submodules: true

      - name: Load params
        id: params
        run: |
          source "sources/.github/workflows/params.env"
          echo "::set-output name=threads::$TF_THREADS"

          # Development working directories
          if [ "$TF_DEV_DIRECTORIES" == "" ]
          then
              TF_DEV_DIRECTORIES="[\".\"]"
          fi
          echo "::set-output name=dev_directories::$TF_DEV_DIRECTORIES"

          # Testing working directories
          if [ "$TF_TEST_DIRECTORIES" == "" ]
          then
              TF_TEST_DIRECTORIES="[\".\"]"
          fi
          echo "::set-output name=test_directories::$TF_TEST_DIRECTORIES"

          # Production working directories
          if [ "$TF_PROD_DIRECTORIES" == "" ]
          then
              TF_PROD_DIRECTORIES="[\".\"]"
          fi
          echo "::set-output name=prod_directories::$TF_PROD_DIRECTORIES"
      - name: Show output values
        id: print
        run: |
          echo "sha7=${{ steps.settings.outputs.sha7 }}"
          echo "work_depth=${{ steps.settings.outputs.work_depth }}"
          echo "threads=${{ steps.settings.outputs.threads }}"
          echo "dev_directories=${{ steps.params.outputs.dev_directories }}"
          echo "test_directories=${{ steps.params.outputs.test_directories }}"
          echo "prod_directories=${{ steps.params.outputs.prod_directories }}"

  dev-fmt:
    name: Format codes
    needs: [init]
    runs-on: ubuntu-latest
    if: needs.init.outputs.work_depth >= '1'
    environment: development
    strategy:
      max-parallel: 1
      matrix:
        content: ${{ fromJson(needs.init.outputs.dev_directories) }}
    steps:
      - name: Simple echo
        id: echo
        run: |
          echo 40

  dev-pull-request:
    name: Commit changes
    needs: [dev-fmt]
    runs-on: ubuntu-latest
    if: needs.init.outputs.work_depth >= '1'
    steps:
      - name: Simple echo
        id: echo
        run: |
          echo 41

  test-deploy:
    name: Deploy on staging environment
    needs: [init, dev-pull-request]
    runs-on: ubuntu-latest
    if: needs.init.outputs.work_depth >= '2'
    environment: testing
    strategy:
      max-parallel: 1
      matrix:
        content: ${{ fromJson(needs.init.outputs.test_directories) }}
    steps:
      - name: Simple echo
        id: echo
        run: |
          echo 42

  prod-deploy:
    name: Deploy on production
    needs: [init, test-deploy]
    runs-on: ubuntu-latest
    if: needs.init.outputs.work_depth >= '3'
    environment: production
    strategy:
      max-parallel: 1
      matrix:
        content: ${{ fromJson(needs.init.outputs.prod_directories) }}
    steps:
      - name: Simple echo
        id: echo
        run: |
          echo 43
